*org.txt*            A minimal Org mode package providing only the necessities.


                      Org.vim Manual by Alex Vear~


Welcome to the org.vim user manual.            *org*  *org.vim*  *vim-org*  *outline*

    1. Introduction ............................... |org-intro|
    2. Installation ............................... |org-install|
    3. Basic syntax ............................... |org-syntax|
    4. Configuration .............................. |org-configuration|
    5. Legal ...................................... |org-legal|
    6. References ................................. |org-references|

==============================================================================
 1. INTRODUCTION                                                    *org-intro*

Org.vim is a very minimal Org mode [2] and Outline mode [1] plugin for Vim
providing only syntax highlighting and folding.

This plugin aims to replicate Vim's existing Markdown editing experience on
Org mode (and Outline mode) files, rather than trying to be a full featured
Org mode plugin -- that is what Emacs is for.

==============================================================================
 2. INSTALLATION                                                  *org-install*

WIP.

==============================================================================
 3. BASIC SYNTAX                                                   *org-syntax*

WIP.

==============================================================================
 4. CONFIGURATION                                           *org-configuration*

                               *'b:org_state_keywords'*  *'g:org_state_keywords'*
Value: list of strings~
Default: ['TODO', 'NEXT', 'DONE']~

To change the default state keywords set this variable to contain a list of
strings you would like to use.
>
    let g:org_state_keywords = ['TODO', 'WAIT', 'DOING', 'DONE', 'CANCELED']
<
Note: state keywords are case sensitive.

State keywords can be set on specific buffers by using |'b:org_state_keywords'|
rather than |'g:org_state_keywords'|.

------------------------------------------------------------------------------
                                 *'b:org_conceal_links'*  *'g:org_conceal_links'*
Value: numeric~
Default: 1~

This option changes how Org mode links are rendered.  If this option is
enabled, most of the link syntax will be collapsed to look as it would within
Emacs or a web browser; only showing the (underlined) link text.
>
    [https://www.vim.org][Vim website] --> Vim website
<
When in insert mode with the cursor on that line, Vim will show the full link
syntax.  This feature is enabled by default, however the way Vim treats
concealed text can be annoying, so it can be disabled.

To disable for all Org mode files, place the following line in your vimrc:
>
    let g:org_conceal_links = 0
<
To disable for a specific file use this instead:
>
    let b:org_conceal_links = 0
<
If you would like to modify how links are concealed, you can disable this
option, and manually set the |conceallevel| and |concealcursor| options from
an |autocmd| like so.
>
    autocmd FileType org setlocal conceallevel=2 concealcursor=nc
<
------------------------------------------------------------------------------
                                     *'b:org_clean_folds'*  *'g:org_clean_folds'*
Value: numeric~
Default: 0~

By default folds in Vim look extremely ugly in comparison to folds in Emacs'
Org and Outline mode. When this option is enabled, it will make folds (in Org
or Outline mode buffers) look similar to those in Emacs.

To enable these nicer looking folds for all Org and Outline mode files. place
the following line in your vimrc:
>
    let g:org_clean_folds = 1
<
To enable them only for a specific files, you can use this instead:
>
    let b:org_clean_folds = 1
<
------------------------------------------------------------------------------
                                     *'b:org_use_italics'*  *'g:org_use_italics'*
Value: numeric~
Default: 0~

Display italic org-mode markup (e.g. `/this is italic org-mode markup/`) using
the italic variant of your font.

Note: this option is disabled by default because some terminals and monospaced
fonts don't support the use of italics.

To enable this feature in all Org mode files place the following line in your
vimrc:
>
    let g:org_use_italics = 1
<
To enable italics only in a single buffer, use this instead:
>
    let b:org_use_italics = 1
<
------------------------------------------------------------------------------
       *'b:org_highlight_table_background'*  *'g:org_highlight_table_background'*
Value: numeric~
Default: 1~

This option allows you to disable the highlighting of table backgrounds, as
the default may not look great with your chosen |colorscheme|.

To disable this feature place the following line in your vimrc:
>
    let g:org_highlight_table_background = 0
<
To disable for a single buffer use this instead:
>
    let b:org_highlight_table_background = 0
<
==============================================================================
 5. LEGAL                                                           *org-legal*

Org.vim is based on the work of many other people (far too many to list here),
without them org.vim would not have been possible.  The most notable of thse
works are:

  * GNU Emacs' Outline mode [1].
  * Carsten Dominik's Org mode [2].

Org.vim is distributed under the same terms as Vim itself.

Copyright (c) 2018-2019, Alex Vear.

A copy of the full licence text should have been provided with this extension
in the `LICENCE` file.  The license can also be viewed on the web [3] or by
viewing the |license| section of the |uganda.txt| help doc from within Vim.

==============================================================================
 6. REFERENCES                                                 *org-references*

[1]: <https://www.gnu.org/software/emacs/manual/html_node/emacs/Outline-Mode.html>
[2]: <https://orgmode.org/>
[3]: <http://vimdoc.sourceforge.net/htmldoc/uganda.html#license>

------------------------------------------------------------------------------
vim:et:ts=8:sts=4:sw=4:tw=78:ft=help:norl:
